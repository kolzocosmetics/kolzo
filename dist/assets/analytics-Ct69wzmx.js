class o{events=[];sessionId;constructor(){this.sessionId=this.generateSessionId(),this.initialize()}generateSessionId(){return`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}initialize(){this.trackPageView(window.location.pathname),this.trackEvent("session_start",{session_id:this.sessionId,user_agent:navigator.userAgent,screen_resolution:`${screen.width}x${screen.height}`,viewport:`${window.innerWidth}x${window.innerHeight}`})}trackEvent(s,t){const e={event:s,properties:t,timestamp:Date.now()};this.events.push(e),console.log("Analytics Event:",e),this.sendToAnalyticsService(e)}async sendToAnalyticsService(s){try{await new Promise(t=>setTimeout(t,100))}catch(t){console.error("Analytics error:",t)}}trackPageView(s){this.trackEvent("page_view",{page:s,session_id:this.sessionId,referrer:document.referrer})}trackProductView(s,t,e,r){this.trackEvent("product_view",{product_id:s,product_name:t,price:e,category:r,session_id:this.sessionId})}trackAddToCart(s,t,e,r){this.trackEvent("add_to_cart",{product_id:s,product_name:t,price:e,quantity:r,session_id:this.sessionId})}trackRemoveFromCart(s,t,e,r){this.trackEvent("remove_from_cart",{product_id:s,product_name:t,price:e,quantity:r,session_id:this.sessionId})}trackPurchase(s,t,e){this.trackEvent("purchase",{order_id:s,total:t,items:e,session_id:this.sessionId})}trackSearch(s,t){this.trackEvent("search",{query:s,results_count:t,session_id:this.sessionId})}trackWishlistAdd(s,t){this.trackEvent("wishlist_add",{product_id:s,product_name:t,session_id:this.sessionId})}trackWishlistRemove(s,t){this.trackEvent("wishlist_remove",{product_id:s,product_name:t,session_id:this.sessionId})}trackLogin(s){this.trackEvent("login",{method:s,session_id:this.sessionId})}trackSignup(s){this.trackEvent("signup",{method:s,session_id:this.sessionId})}trackLogout(){this.trackEvent("logout",{session_id:this.sessionId})}trackFormStart(s){this.trackEvent("form_start",{form_name:s,session_id:this.sessionId})}trackFormComplete(s){this.trackEvent("form_complete",{form_name:s,session_id:this.sessionId})}trackFormError(s,t){this.trackEvent("form_error",{form_name:s,error:t,session_id:this.sessionId})}trackError(s,t){this.trackEvent("error",{error:s,stack:t,session_id:this.sessionId})}trackPerformance(s,t){this.trackEvent("performance",{metric:s,value:t,session_id:this.sessionId})}getEvents(){return[...this.events]}clearEvents(){this.events=[]}}const n=new o,a=i=>n.trackPageView(i),c=(i,s,t,e)=>n.trackRemoveFromCart(i,s,t,e),d=(i,s)=>n.trackWishlistAdd(i,s),h=(i,s)=>n.trackWishlistRemove(i,s);export{a as trackPageView,c as trackRemoveFromCart,d as trackWishlistAdd,h as trackWishlistRemove};
